{% set name = "lalframe" %}
{% set version = "1.5.0" %}
{% set sha256 = "a2c81201c36e64fe9467ac139374fe8fa793c56e48611e90fe6beca3a24f85dc" %}

# dependencies
{% set lal_version = "6.21.0" %}
{% set framecpp_version = "2.5.5" %}

package:
  name: "{{ name|lower }}"
  version: "{{ version }}"

source:
  url: "http://software.ligo.org/lscsoft/source/lalsuite/{{ name }}-{{ version }}.tar.xz"
  sha256: "{{ sha256 }}"

build:
  error_overdepending: true
  error_overlinking: true
  number: 0
  skip: true  # [win]

requirements:
  build:
    - {{ compiler('c') }}
    - make
    - pkg-config >=0.18.0
    - swig >=3.0.7
  host:
    - lal >={{ lal_version }}
    - ldas-tools-framecpp >={{ framecpp_version }}
    - libframe
  run:
    - lal >={{ lal_version }}
    - ldas-tools-framecpp >={{ framecpp_version }}
    - libframe

test:
  requires:
    - pkg-config  # [unix]
  source_files:
    - test/F-TEST-600000000-60.gwf
  commands:
    - pushd test
    - lalframe_version --verbose
    - lalfr-cksum F-TEST-600000000-60.gwf
    - lalfr-cut H1:LSC-AS_Q F-TEST-600000000-60.gwf > /dev/null
    - lalfr-dump F-TEST-600000000-60.gwf
    - lalfr-paste F-TEST-600000000-60.gwf > /dev/null
    - lalfr-split F-TEST-600000000-60.gwf
    - lalfr-stat F-TEST-600000000-60.gwf
    - lalfr-stream --channel H1:LSC-AS_Q --start-time 600000000 --duration 0.01 --frame-glob F-TEST-*.gwf
    - lalfr-vis --channel H1:LSC-AS_Q --start-time 600000000 --duration 0.01 --frame-glob F-TEST-*.gwf
    - popd
    - test "$(pkg-config --modversion ${PKG_NAME})" == "${PKG_VERSION}"  # [unix]

outputs:
  - name: lalframe
    build:
      run_exports:
        - {{ pin_subpackage("lalframe", max_pin="x.x") }}

  - name: python-lalframe
    script: install-python.sh
    build:
      error_overdepending: true
      error_overlinking: true
    requirements:
      build:
        - {{ compiler('c') }}
        - make
        - pkg-config >=0.18.0
        - swig >=3.0.7
      host:
        - {{ pin_subpackage('lalframe', exact=True) }}
        - numpy
        - python
      run:
        - lal >={{ lal_version }}
        - {{ pin_subpackage('lalframe', exact=True) }}
        - ldas-tools-framecpp >={{ framecpp_version }}  # [linux]
        - libframe  # [linux]
        - {{ pin_compatible('numpy') }}
        - python
        - python-lal >={{ lal_version }}
    test:
      imports:
        - lalframe
        - lalframe.frread
      requires:
        - mock  # [py<33]
        - pathlib  # [py<34]
        - pytest >=4.0.0a0
      source_files:
        - test/F-TEST-600000060-60.gwf
        - test/python
      commands:
        - pushd test/python; python -m pytest -v; popd
    about:
      home: "https://wiki.ligo.org/Computing/LALSuite"
      doc_url: "https://lscsoft.docs.ligo.org/lalsuite/lalframe/"
      dev_url: "https://git.ligo.org/lscsoft/lalsuite/"
      license: "GPL-3.0-or-later"
      license_family: "GPL"
      license_file: "COPYING"
      summary: "LSC Algorithm Frame Library"
      description: |
        The LSC Algorithm Frame Library for gravitational wave data analysis.
        This package contains the python bindings.

about:
  home: "https://wiki.ligo.org/Computing/LALSuite"
  doc_url: "https://lscsoft.docs.ligo.org/lalsuite/lalframe/"
  dev_url: "https://git.ligo.org/lscsoft/lalsuite/"
  license: "GPL-3.0-or-later"
  license_family: "GPL"
  license_file: "COPYING"
  summary: "LSC Algorithm Frame Library"
  description: |
    The LSC Algorithm Frame Library for gravitational wave data analysis.
    This package contains the shared-object libraries needed to run
    applications that use the LAL Frame library.  If you want to install
    the Python bindings, please install the associated python-lalframe
    package.

extra:
  recipe-maintainers:
    - duncanmmacleod
    - skymoo
